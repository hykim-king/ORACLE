<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.pcwk.ehr.user">

<sql id="searchCondition">
       <where>
       <choose>
        <when test=" '10' == searchDiv and '' != searchWord">
          name like #{searchWord} || '%'
        </when>
        <when test=" '20' == searchDiv and '' != searchWord">
           email like #{searchWord} || '%'
        </when>
        <when test=" '30' == searchDiv and '' != searchWord">
          user_id like #{searchWord} || '%'
        </when>                                                     
       </choose>
                               
       </where>     
</sql>

  <select id="doRetrieve" parameterType="UserVO" resultType="UserVO">
	select A.*,B.*
	from (
	        SELECT TT1.rnum AS num,
	                tt1.user_id as userId,
	                tt1.name,
	                tt1.passwd,
	                tt1.hr_level as intLevel,
	                tt1.email,
	                tt1.login,
	                tt1.recommend,
	                DECODE(to_char(SYSDATE,'YYYY-MM-DD'),
	                       to_char(tt1.reg_dt,'YYYY-MM-DD'),
	                       to_char(tt1.reg_dt,'HH24:MI'),
	                       to_char(tt1.reg_dt,'YYYY-MM-DD')) AS reg_dt
	        from (
	                SELECT ROWNUM as rnum, T1.*
	                from(
	                         SELECT *
	                         from hr_member
	                         --where : name(10), Email(20), USER_ID(30)
                            <include refid="searchCondition"></include>                   
	                         
	                         ORDER by reg_dt DESC
	                 )T1
	            <![CDATA[ WHERE ROWNUM <= #{pageSize} * (#{pageNo}-1)+ #{pageSize} ]]>  --종료
	         )TT1
	       <![CDATA[   where rnum >= #{pageSize} * (#{pageNo}-1)+ 1   ]]> --시작번호
	 )A
	 CROSS JOIN
	 (
	                SELECT COUNT(*) totalCnt
	                from hr_member
	                --where
                  <include refid="searchCondition"></include>              
	 )B
	 
  </select>

  <update id="update" parameterType="UserVO" >
		  UPDATE hr_member        
		SET  name      =  #{name}   
		    ,passwd    =  #{passwd}   
		    ,hr_level  =  #{intLevel}   
		    ,login     =  #{login}   
		    ,recommend =  #{recommend}   
		    ,email     =  #{email}   
		    ,reg_dt    = SYSDATE
		WHERE                   
		        user_id = #{userId} 
  </update>    

  <select id="getAll" parameterType="UserVO" resultType="UserVO">
  SELECT t1.user_id as userId,
       t1.name,   
       t1.passwd, 
       t1.hr_level  as intLevel,                                   
       t1.login,                                      
       t1.recommend,                                  
       t1.email,                                      
       TO_CHAR(t1.reg_dt,'yyyy-mm-dd HH24MISS') reg_dt          
	FROM hr_member t1          
	WHERE user_id LIKE #{userId} ||'%' 
	ORDER BY t1.user_id        
  </select>

  <select id="getCount" parameterType="UserVO" resultType="int">
	  SELECT COUNT(*) cnt       
		FROM hr_member            
		WHERE user_id LIKE #{userId} ||'%'
  </select>

  <resultMap type="UserVO" id="UserMap">
    <result column="user_id"    property="userId"/>
    <result column="name"       property="name"/>
    <result column="passwd"     property="passwd"/>
    <result column="hr_level"   property="intLevel"/>
    <result column="login"      property="login"/>
    <result column="recommend"  property="recommend"/>
    <result column="email"      property="email"/>
    <result column="reg_dt"     property="reg_dt"/>    
  </resultMap>

  <select id="get" parameterType="UserVO" resultMap="UserMap">
  SELECT           
    t1.user_id,
    t1.name,
    t1.passwd,
    t1.hr_level,
    t1.login,    
    t1.recommend,
    t1.email,    
    TO_CHAR(t1.reg_dt,'yyyy-mm-dd HH24MISS') reg_dt
FROM               
    hr_member t1   
WHERE  user_id = #{userId} 
  </select>

  <insert id="add" parameterType="UserVO">
 INSERT INTO hr_member (  
     user_id,             
     name,                
     passwd,              
     hr_level,            
     login,               
     recommend,           
     email,               
     reg_dt               
 ) VALUES (               
     #{userId},     
     #{name},   
     #{passwd},      
     #{intLevel},
     #{login},                 
     #{recommend},          
     #{email},                  
     SYSDATE                    
 )                                 
  </insert>
  <delete id="deleteOne" parameterType="UserVO">
		DELETE FROM hr_member
		WHERE user_id = #{userId}
  </delete>
    
    
</mapper>